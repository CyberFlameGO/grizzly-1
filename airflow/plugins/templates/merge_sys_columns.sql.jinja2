merge into {{ task_config.target_table_name }} target
using
(

  select * from (
  select source.*,
    TO_JSON_STRING( struct( {{ task_config.keys|join(',') }} )) as sys_kyes,

    {%- if task_config|attr('delta_compare') %}
      MD5( TO_JSON_STRING( struct( {{ task_config.delta_compare|join(',') }} )) ) as sys_hash,
    {%- endif %}
    {%- if not task_config|attr('delta_compare') %}
      MD5( TO_JSON_STRING( source ) ) as sys_hash,
    {%- endif %}

    current_timestamp() as sys_act_ts,
    'I' as sys_act_id
  from {{ task_config.staging_table_name }} as source ) as source
  where not exists
    (
      select 1 from {{ task_config.target_table_name }} as target
      where
            target.sys_kyes = source.sys_kyes
        and target.sys_hash = source.sys_hash
    )

) as source
on
(
  target.sys_kyes = source.sys_kyes
)
WHEN MATCHED THEN
  UPDATE SET
    {% for f in data.source.schema %}
      {%- if not loop.first %} , {%endif%}
        target.{{f.name}} =  source.{{f.name}}
    {%- endfor%}
    , target.sys_kyes = source.sys_kyes
    , target.sys_hash = source.sys_hash
    , target.sys_act_ts = source.sys_act_ts
    , target.sys_act_id = 'U'
WHEN NOT MATCHED BY TARGET THEN
  INSERT (
    {{ data.source.schema|join(',', attribute='name') }}
    , sys_kyes
    , sys_hash
    , sys_act_ts
    , sys_act_id
    )
  VALUES (
  {% for f in data.source.schema %}
    {%- if not loop.first %} , {%endif%} source.{{f.name}}
  {%- endfor%}
  , source.sys_kyes
  , source.sys_hash
  , source.sys_act_ts
  , source.sys_act_id
)
